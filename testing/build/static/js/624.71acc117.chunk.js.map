{"version":3,"file":"static/js/624.71acc117.chunk.js","mappings":"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","sources":["Common/Sidebar/sidebardata.js","Common/Sidebar/sidebar.js","Common/TopBar/index.js","Components/Calculator/calculateinf.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as MdIcons from 'react-icons/md';\r\nconst userId = localStorage.getItem('id');\r\nexport const SidebarData = [\r\n\r\n    {\r\n        title: 'Home',\r\n        path: `/home/${userId}`,\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Compare',\r\n        icon: <MdIcons.MdCompare />,\r\n        path: \"/CompareInfluencers\",\r\n        cName: 'nav-text',\r\n        // children: [\r\n        //     {\r\n        //         title: \"Influencers\",\r\n        //         cName: 'nav-nested',\r\n        //     },\r\n        //     {\r\n        //         title: \"Lists\",\r\n        //         path: \"/CompareLists\",\r\n        //         cName: 'nav-nested',\r\n        //     }\r\n        // ]\r\n    },\r\n    {\r\n        title: 'Calculator',\r\n        path: '/calculate',\r\n        icon: <AiIcons.AiFillCalculator />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport './sidebar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from \"./sidebardata\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { AiFillCaretDown } from 'react-icons/ai';\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport logo from '../../Assets/Images/logo.png';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    const showSidebar = () => {\r\n        if (isMobile) {\r\n            setSidebar(true)\r\n        }\r\n        else if (!isMobile) {\r\n            setSidebar(false)\r\n        }\r\n    }\r\n\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        showSidebar()\r\n    }, [width])\r\n\r\n    const isMobile = width <= 700;\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n            <div className={sidebar ? 'nav-menu' : 'nav-menu-active'}>\r\n                <nav className=\"navbar\">\r\n                    {/* <div className={sidebar ? 'navbar-inactive' : 'navbar'} >\r\n                        <Link to='#' className='menu-bars'>\r\n                            <FaIcons.FaBars onClick={showSidebar} />\r\n                        </Link>\r\n                    </div> */}\r\n                    <img src={logo} className={isMobile ? 'logo_hide' : 'logo'} />\r\n                    <ul className=\"nav-menu-items\">\r\n                        {\r\n                            SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <li className={item.cName}>\r\n                                        {\r\n                                            sidebar === true ?\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                </Link>\r\n                                                :\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                    <span\r\n                                                    >{item.title}</span>\r\n                                                </Link>\r\n                                        }\r\n\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div >\r\n        </IconContext.Provider >\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss';\r\nimport help from '../../Assets/Images/help.png';\r\nimport { MdOutlineArrowDropDown } from 'react-icons/md';\r\nimport { useNavigate, Link, useLocation, useParams } from 'react-router-dom';\r\nimport UserIcon from '../../Assets/Images/userIcon.png';\r\n\r\nfunction TopBar() {\r\n\r\n    const [showDropDownSelected, setShowDropdownSelected] = useState(false);\r\n    const [comparedPageVisited, setComparedPageVisited] = useState(false);\r\n    const userId = localStorage.getItem('id');\r\n    const userName = localStorage.getItem('name');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const params = useParams()\r\n\r\n    let TOPBAR_TEXTS = [{ page: `/home/${userId}`, text: \"Home\" }, { page: \"/CompareLists\", text: \"Compare Lists\" }, { page: \"/CompareInfluencers\", text: \"Compare Influencers\" }, { page: \"/influencerslist/\", text: \"Search Results\" }, { page: \"/basketInfluencers\", text: \"Influencer Bundle\" }, { page: \"/userLists\", text: \"List\" }, { page: \"/profile\", text: \"Influencer Profile\" }, { page: `/updateprofile/${userId}`, text: \"Profile Settings\" }, { page: `/calculate`, text: \"Calculate Cost\" }]\r\n    let textToShow = TOPBAR_TEXTS.find(el => location.pathname.includes(el.page))?.text\r\n\r\n    const checkPage = () => {\r\n        {\r\n            textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                setComparedPageVisited(true)\r\n                :\r\n                setComparedPageVisited(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        checkPage();\r\n    },[params])\r\n\r\n    const handleShowProfileDropdown = () => {\r\n        let data = showDropDownSelected ? false : true;\r\n        setShowDropdownSelected(data)\r\n    }\r\n\r\n    const handleRedirectToProfileSettings = () => {\r\n        navigate(`/updateprofile/${userId}`)\r\n    }\r\n\r\n    const handleRedireactToAbout = () => {\r\n        navigate(`/about`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        <Link to='/' />\r\n        localStorage.clear();\r\n        // let url = `http://13.127.230.191:4000/logout`;\r\n        // fetch((url), {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8',\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topbar\">\r\n                <div className={comparedPageVisited === true ? \"page_title_compared\" : \"page_title\"}>\r\n                    {textToShow}\r\n                    {textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                        <div style={{ display: 'flex', paddingTop: '1rem' }}>\r\n                            <div style={{ paddingLeft: '1.25rem' }}>\r\n                                <Link to=\"/CompareInfluencers\" className=\"tab_text\">Influencers</Link>\r\n                            </div>\r\n                            <div style={{ paddingLeft: '3.5rem' }}>\r\n                                <Link to=\"/CompareLists\" className=\"tab_text\">List</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span className=\"topbar_help_icon\"><img src={help} /></span>\r\n                    <img src={UserIcon} className=\"topbar_user_icon\" />\r\n                    <span className=\"topbar_username\">{userName}</span>\r\n                    <span style={{ marginRight: '4rem', cursor: 'pointer' }}><MdOutlineArrowDropDown onClick={handleShowProfileDropdown} /></span>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDropDownSelected === true ?\r\n                    <div className=\"dropdown\">\r\n                        <div onClick={handleRedirectToProfileSettings} className=\"dropdown_title\">Profile Settings</div>\r\n                        <div onClick={handleRedireactToAbout} className=\"dropdown_title\">About</div>\r\n                        <div onClick={handleLogout} className=\"dropdown_title\"><Link to='/'>Logout</Link></div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Navbar from '../../Common/Sidebar/sidebar';\r\nimport Topbar from '../../Common/TopBar/index';\r\nimport './calculateinf.scss';\r\nimport { Input } from 'reactstrap';\r\nimport bdayIcon from '../../Assets/Images/bdayIcon.png';\r\nimport categoryIcon from '../../Assets/Images/categoryIcon.png';\r\nimport locationIcon from '../../Assets/Images/locationIcon.png';\r\nimport errorIcon from '../../Assets/Images/errorIcon.png';\r\nimport Slider from '@mui/material/Slider';\r\nimport Select from 'react-select';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst options = [\r\n    { value: 'Nano(1K-10K Followers)', label: 'Nano(1K-10K Followers)' },\r\n    { value: 'Micro(10K-50K Followers)', label: 'Micro(10K-50K Followers)' },\r\n    { value: 'Mid-Tier(50K-100K Followers)', label: 'Mid-Tier(50K-100K Followers)' },\r\n    { value: 'Macro(100K-1M Followers)', label: 'Macro(100K-1M Followers)' },\r\n    { value: 'Mega(1M + Followers)', label: 'Mega(1M + Followers)' },\r\n];\r\n\r\nfunction CalculateCost() {\r\n    const [budget, setBudget] = useState(0);\r\n    const [creatorsCount, setCreatorsCount] = useState(1);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isInfluencerChecked, setIsInfluencerChecked] = useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n    const [nanoClicked, setNanoClicked] = useState(false);\r\n    const [microClicked, setMicroClicked] = useState(false);\r\n    const [midTierClicked, setMidTierClicked] = useState(false);\r\n    const [macroClicked, setMacroClicked] = useState(false);\r\n    const [megaClicked, setMegaClicked] = useState(false);\r\n    const [nanoMaxClicked, setNanoMaxClicked] = useState(false);\r\n    const [microMaxClicked, setMicroMaxClicked] = useState(false);\r\n    const [midTierMaxClicked, setMidTierMaxClicked] = useState(false);\r\n    const [macroMaxClicked, setMacroMaxClicked] = useState(false);\r\n    const [megaMaxClicked, setMegaMaxClicked] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [selectedOption1, setSelectedOption1] = useState(null);\r\n    const [minRangeFollowers, setMinRangeFollowers] = useState(1000)\r\n    const [maxRangeFollowers, setMaxRangeFollowers] = useState(10000)\r\n    const [silderRolled, setSliderRolled] = useState(false);\r\n    const [sliderRolled1, setSlider1Rolled] = useState(false);\r\n    const [isfilterFollowerClicked, setIsFilterFollowerClicked] = useState(false);\r\n    const [filterFollowersApplied, setFilterFollowersApplied] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleNextPage = () => {\r\n        if (isChecked === true) {\r\n            if ((silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) > 1000 && (silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) < 10000) {\r\n                if (budget < 2000) {\r\n                    setError(true)\r\n                }\r\n                else {\r\n                    navigate(`/calculate/budget=${budget}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n                }\r\n            }\r\n            else if ((silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) > 10000 && (silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) < 50000) {\r\n                if (budget < 7000) {\r\n                    setError(true)\r\n                }\r\n                else {\r\n                    navigate(`/calculate/budget=${budget}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n                }\r\n            }\r\n            else if ((silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) > 50000 && (silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) < 100000) {\r\n                if (budget < 24500) {\r\n                    setError(true)\r\n                }\r\n                else {\r\n                    navigate(`/calculate/budget=${budget}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n                }\r\n            }\r\n            else if ((silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) > 100000 && (silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) < 1000000) {\r\n                if (budget < 85750) {\r\n                    setError(true)\r\n                }\r\n                else {\r\n                    navigate(`/calculate/budget=${budget}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n                }\r\n            }\r\n            else if ((silderRolled ? scale1(minRangeFollowers) : minRangeFollowers) > 1000000) {\r\n                if (budget < 300125) {\r\n                    setError(true)\r\n                }\r\n                else {\r\n                    navigate(`/calculate/budget=${budget}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n                }\r\n            }\r\n        }\r\n        else if (isInfluencerChecked === true) {\r\n            navigate(`/calculate/creators=${creatorsCount}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`)\r\n        }\r\n    }\r\n\r\n    const scale = value => {\r\n        const previousMarkIndex = Math.floor(value / 25);\r\n        const previousMark = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange)[previousMarkIndex];\r\n        const remainder = value % 25;\r\n        if (remainder === 0) {\r\n            return previousMark.scaledValue;\r\n        }\r\n        const nextMark = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange)[previousMarkIndex + 1];\r\n        const increment = (nextMark.scaledValue - previousMark.scaledValue) / 25;\r\n        return remainder * increment + previousMark.scaledValue;\r\n    };\r\n\r\n    const scale1 = value => {\r\n        const previousMarkIndex1 = Math.floor(value / 25);\r\n        const previousMark1 = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange)[previousMarkIndex1];\r\n        const remainder = value % 25;\r\n        if (remainder === 0) {\r\n            return previousMark1.scaledValue;\r\n        }\r\n        const nextMark = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange)[previousMarkIndex1 + 1];\r\n        const increment = (nextMark.scaledValue - previousMark1.scaledValue) / 25;\r\n        return remainder * increment + previousMark1.scaledValue;\r\n    };\r\n\r\n    const nanoRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 1000,\r\n            label: \"1k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 2500,\r\n            label: \"2.5k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 5000,\r\n            label: \"5k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 7500,\r\n            label: \"7.5k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 10000,\r\n            label: \"10k\"\r\n        }\r\n    ];\r\n\r\n    const midTierRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 50000,\r\n            label: \"50k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 60000,\r\n            label: \"60k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 75000,\r\n            label: \"75k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 90000,\r\n            label: \"90k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 100000,\r\n            label: \"100k\"\r\n        }\r\n    ];\r\n\r\n    const macroRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 100000,\r\n            label: \"100k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 250000,\r\n            label: \"250k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 500000,\r\n            label: \"500k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 750000,\r\n            label: \"750k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 1000000,\r\n            label: \"1M\"\r\n        }\r\n    ];\r\n\r\n    const megaRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 1000000,\r\n            label: \"1M+\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 2500000,\r\n            label: \"2.5M+\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 5000000,\r\n            label: \"5M+\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 7500000,\r\n            label: \"7.5M+\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 10000000,\r\n            label: \"10M+\"\r\n        }\r\n    ]\r\n\r\n    const microRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 10000,\r\n            label: \"10k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 20000,\r\n            label: \"20k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 30000,\r\n            label: \"30k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 40000,\r\n            label: \"40k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 50000,\r\n            label: \"50k\"\r\n        }\r\n    ];\r\n\r\n    function numFormatter(num) {\r\n        if (num > 999 && num < 1000000) {\r\n            return (num / 1000).toFixed(0) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n        } else if (num >= 1000000) {\r\n            return (num / 1000000).toFixed(0) + \"M\"; // convert to M for number from > 1 million\r\n        } else if (num < 900) {\r\n            return num; // if value < 1000, nothing to do\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedOption !== null) {\r\n            if (selectedOption.label.includes('Mega(1M + Followers)')) {\r\n                setMegaClicked(true);\r\n                setMicroClicked(false);\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Macro(100K-1M Followers)')) {\r\n                setMacroClicked(true);\r\n                setMicroClicked(false);\r\n                setMidTierClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Mid-Tier(50K-100K Followers)')) {\r\n                setMidTierClicked(true)\r\n                setMicroClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Micro(10K-50K Followers)')) {\r\n                setMicroClicked(true)\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Nano(1K-10K Followers)')) {\r\n                setNanoClicked(true)\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setMicroClicked(false);\r\n            }\r\n        }\r\n        console.log(nanoClicked);\r\n    }, [selectedOption])\r\n\r\n    return (\r\n        <div className='calculate_container row no-gutters'>\r\n            <div className='col-lg-2 col-md-2 col-sm-2 col-xs-2  col-2'>\r\n                <Navbar />\r\n            </div>\r\n            <div className='middle_pane_calculate col-lg-10 col-sm-10 col-md-10 col-xs-10 col-10'>\r\n                <Topbar />\r\n                <div className='middle_pane_content row no-gutters'>\r\n                    <div className='steps_pane col-lg-3 col-md-3 col-sm-0 col-xs-0 col-0'>\r\n                        <div className='steps_pane_part'>\r\n                            <div className='steps_pane_title'>Step 1</div>\r\n                            <div className='followers_title'>\r\n                                Followers\r\n                            </div>\r\n                            <div className='followers_count'>\r\n                                Any\r\n                            </div>\r\n                            <div className='budget_influencers_title'>Budget / Influencers</div>\r\n                            <div className='budget_influencers_value'> -- </div>\r\n                        </div>\r\n                        <div className='steps_pane_part_inactive'>\r\n                            <div className='steps_pane_title'>Step 2</div>\r\n                            <div className='deliverables'>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>Reels</div>\r\n                                </div>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>Static posts</div>\r\n                                </div>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>Videos</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='deliverables'>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>Stories</div>\r\n                                </div>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>Swipeup Stories</div>\r\n                                </div>\r\n                                <div className='deliverables_pane'>\r\n                                    <div className='deliverables_value'> ---</div>\r\n                                    <div className='deliverables_title'>IGTV</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='steps_pane_part_inactive'>\r\n                            <div className='steps_pane_title'>Step 3</div>\r\n                            <div className='filter_pane'>\r\n                                <img src={bdayIcon} /><div className='filter_value'> -- </div>\r\n                            </div>\r\n                            <div className='filter_pane'>\r\n                                <img src={categoryIcon} /><div className='filter_value'> -- </div>\r\n                            </div>\r\n                            <div className='filter_pane'>\r\n                                <img src={locationIcon} /><div className='filter_value'> -- </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='steps_pane_part_inactive'>\r\n                            <div className='steps_pane_title'>Step 4</div>\r\n                            <div className='cost_title'>Estimated Cost</div>\r\n                            <div className='cost_value'> ₹ --</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content_pane col-lg-6 col-md-9 col-sm-12 col-xs-12 col-12'>\r\n                        <div className='steps_title'>STEP 1</div>\r\n                        <div className='pane_title'>Influencer Stats</div>\r\n                        <div className='filter_content'>\r\n                            Adjust sliders for the followers count needed for\r\n                            your Influencer groups\r\n                        </div>\r\n                        <div>\r\n                            <section className=\"modal_section\">\r\n                                <div className=\"modal_option row no-gutters\">\r\n                                    <div className=\"modal_title\">Followers Count</div>\r\n                                    <div className=\"label_slider\">Minimum</div>\r\n                                    <div className=' row no-gutters justify-content-between'>\r\n                                        {\r\n                                            silderRolled === true ?\r\n                                                <div className=\"followers_count_1 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12\">{scale1(minRangeFollowers)}</div>\r\n                                                :\r\n                                                <div className=\"followers_count_1 col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12\">{minRangeFollowers}</div>\r\n                                        }\r\n                                        <div className='col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12'>\r\n                                            <Select\r\n                                                defaultValue={selectedOption}\r\n                                                onChange={setSelectedOption}\r\n                                                options={options}\r\n                                                className='select_bar'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Slider\r\n                                        value={minRangeFollowers}\r\n                                        onChange={(e, data) => {\r\n                                            setMinRangeFollowers(data)\r\n                                            setSliderRolled(true);\r\n                                        }}\r\n                                        marks={megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange}\r\n                                        min={0}\r\n                                        max={100}\r\n                                        step={1}\r\n                                        scale={scale1}\r\n                                        valueLabelFormat={numFormatter}\r\n                                        className='follower_silder'\r\n                                    />\r\n                                    <div style={{ paddingTop: '1.125rem' }}>\r\n                                        <div className=\"label_slider\">Maximum</div>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                            {\r\n                                                sliderRolled1 === true ?\r\n                                                    <div className=\"followers_count\">{scale(maxRangeFollowers)}</div>\r\n                                                    :\r\n                                                    <div className=\"followers_count\">{maxRangeFollowers}</div>\r\n                                            }\r\n                                            <div style={{ display: 'flex', justifyContent: \"flex-end\" }}>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Slider\r\n                                        value={maxRangeFollowers}\r\n                                        onChange={(e, data) => {\r\n                                            setMaxRangeFollowers(data)\r\n                                            setSlider1Rolled(true);\r\n                                        }}\r\n                                        marks={megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : nanoRange}\r\n                                        min={0}\r\n                                        max={100}\r\n                                        step={1}\r\n                                        scale={scale}\r\n                                        valueLabelFormat={numFormatter}\r\n                                        className='follower_silder'\r\n                                    />\r\n                                    <div style={{\r\n                                        display: 'flex', justifyContent: 'space-between'\r\n                                    }}>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                        <div className='content_bottom_pane'>\r\n                            <div className='select_title_field'>\r\n                                Select the budget or the number of influencers\r\n                                required for marketing\r\n                            </div>\r\n                            <div style={{ paddingTop: '0.75rem' }}>\r\n                                <Input type='checkbox' value={isChecked} onChange={() => setIsChecked(!isChecked)} style={{ cursor: 'pointer' }} disabled={isInfluencerChecked ? true : false} />\r\n                                <label>Budget (INR)</label>\r\n                                <span style={{ marginLeft: '2.2rem' }}> ₹ <Input className='input_box' type='number' value={budget} onChange={(e) => setBudget(e.target.value)} disabled={isInfluencerChecked === true ? true : false} /></span>\r\n                            </div>\r\n                            <div style={{ paddingTop: '0.75rem' }}>\r\n                                <Input type='checkbox' value={isInfluencerChecked} onChange={() => setIsInfluencerChecked(!isInfluencerChecked)} style={{ cursor: 'pointer' }} disabled={isChecked ? true : false} />\r\n                                <label>No of influencers</label>\r\n                                <span><Input className='input_box' type='number' value={creatorsCount} onChange={(e) => { setCreatorsCount(e.target.value) }} disabled={isChecked === true ? true : false} /></span>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            error ?\r\n                                <div className='error_pane'>\r\n                                    <img src={errorIcon} height='0.75rem' /> The followers count does not correspond to the budget.\r\n                                    Please change the budget or followers count to a reasonable range and try again.\r\n                                </div>\r\n                                : null\r\n                        }\r\n                        <div>\r\n                            <Button onClick={handleNextPage} className='next_btn'>Next</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='right_pane col-lg-3 col-md-0 col-sm-0 col-xs-0 col-0'>\r\n                        <div className='image1'></div>\r\n                        {/* <div className='image2' style={{ opacity: '0.2' }}>\r\n                        </div> */}\r\n                        {/* <span className='indicator'>Specific</span>\r\n                        <span className='indicator'>Broad</span> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CalculateCost;"],"names":["userId","localStorage","getItem","SidebarData","title","path","icon","cName","useState","sidebar","setSidebar","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","isMobile","value","color","className","src","logo","map","item","index","to","showDropDownSelected","setShowDropdownSelected","comparedPageVisited","setComparedPageVisited","userName","navigate","useNavigate","location","useLocation","params","useParams","textToShow","page","text","find","el","pathname","includes","style","display","paddingTop","paddingLeft","alignItems","marginRight","cursor","onClick","clear","options","label","budget","setBudget","creatorsCount","setCreatorsCount","isChecked","setIsChecked","isInfluencerChecked","setIsInfluencerChecked","error","setError","nanoClicked","setNanoClicked","microClicked","setMicroClicked","midTierClicked","setMidTierClicked","macroClicked","setMacroClicked","megaClicked","setMegaClicked","selectedOption","setSelectedOption","minRangeFollowers","setMinRangeFollowers","maxRangeFollowers","setMaxRangeFollowers","silderRolled","setSliderRolled","sliderRolled1","setSlider1Rolled","scale","previousMarkIndex","Math","floor","previousMark","megaRange","macroRange","midTierRange","microRange","nanoRange","remainder","scaledValue","scale1","previousMarkIndex1","previousMark1","numFormatter","num","toFixed","console","log","bdayIcon","categoryIcon","locationIcon","defaultValue","onChange","Slider","e","data","marks","min","max","step","valueLabelFormat","justifyContent","type","disabled","marginLeft","target","height","Button"],"sourceRoot":""}