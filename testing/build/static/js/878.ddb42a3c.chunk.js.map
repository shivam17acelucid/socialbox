{"version":3,"file":"static/js/878.ddb42a3c.chunk.js","mappings":"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","sources":["Common/Loader/index.js","Common/Sidebar/sidebardata.js","Common/Sidebar/sidebar.js","Common/TopBar/index.js","Components/List Page/listcomponent.js"],"sourcesContent":["import React from \"react\";\r\nimport '../Loader/index.scss';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default Loader;","import React, { useEffect } from \"react\";\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as MdIcons from 'react-icons/md';\r\nconst userId = localStorage.getItem('id');\r\nexport const SidebarData = [\r\n\r\n    {\r\n        title: 'Home',\r\n        path: `/home/${userId}`,\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Compare',\r\n        icon: <MdIcons.MdCompare />,\r\n        path: \"/CompareInfluencers\",\r\n        cName: 'nav-text',\r\n        // children: [\r\n        //     {\r\n        //         title: \"Influencers\",\r\n        //         cName: 'nav-nested',\r\n        //     },\r\n        //     {\r\n        //         title: \"Lists\",\r\n        //         path: \"/CompareLists\",\r\n        //         cName: 'nav-nested',\r\n        //     }\r\n        // ]\r\n    },\r\n    {\r\n        title: 'Calculator',\r\n        path: '/calculate',\r\n        icon: <AiIcons.AiFillCalculator />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport './sidebar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from \"./sidebardata\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { AiFillCaretDown } from 'react-icons/ai';\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport logo from '../../Assets/Images/inflyu1.png';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    const showSidebar = () => {\r\n        if (isMobile) {\r\n            setSidebar(true)\r\n        }\r\n        else if (!isMobile) {\r\n            setSidebar(false)\r\n        }\r\n    }\r\n\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        showSidebar()\r\n    }, [width])\r\n\r\n    const isMobile = width <= 700;\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n            <div className={sidebar ? 'nav-menu' : 'nav-menu-active'}>\r\n                <nav className=\"navbar\">\r\n                    {/* <div className={sidebar ? 'navbar-inactive' : 'navbar'} >\r\n                        <Link to='#' className='menu-bars'>\r\n                            <FaIcons.FaBars onClick={showSidebar} />\r\n                        </Link>\r\n                    </div> */}\r\n                    <img src={logo} className={isMobile ? 'logo_hide' : 'logo'} />\r\n                    <ul className=\"nav-menu-items\">\r\n                        {\r\n                            SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <li className={item.cName}>\r\n                                        {\r\n                                            sidebar === true ?\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                </Link>\r\n                                                :\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                    <span\r\n                                                    >{item.title}</span>\r\n                                                </Link>\r\n                                        }\r\n\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div >\r\n        </IconContext.Provider >\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss';\r\nimport help from '../../Assets/Images/help.png';\r\nimport { MdOutlineArrowDropDown } from 'react-icons/md';\r\nimport { useNavigate, Link, useLocation, useParams } from 'react-router-dom';\r\nimport UserIcon from '../../Assets/Images/userIcon.png';\r\n\r\nfunction TopBar() {\r\n\r\n    const [showDropDownSelected, setShowDropdownSelected] = useState(false);\r\n    const [comparedPageVisited, setComparedPageVisited] = useState(false);\r\n    const userId = localStorage.getItem('id');\r\n    const userName = localStorage.getItem('name');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const params = useParams()\r\n\r\n    let TOPBAR_TEXTS = [{ page: `/home/${userId}`, text: \"Home\" }, { page: \"/CompareLists\", text: \"Compare Lists\" }, { page: \"/CompareInfluencers\", text: \"Compare Influencers\" }, { page: \"/influencerslist/\", text: \"Search Results\" }, { page: \"/basketInfluencers\", text: \"Influencer Bundle\" }, { page: \"/userLists\", text: \"List\" }, { page: \"/profile\", text: \"Influencer Profile\" }, { page: `/updateprofile/${userId}`, text: \"Profile Settings\" }, { page: `/calculate`, text: \"Calculate Cost\" }]\r\n    let textToShow = TOPBAR_TEXTS.find(el => location.pathname.includes(el.page))?.text\r\n\r\n    const checkPage = () => {\r\n        {\r\n            textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                setComparedPageVisited(true)\r\n                :\r\n                setComparedPageVisited(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        checkPage();\r\n    },[params])\r\n\r\n    const handleShowProfileDropdown = () => {\r\n        let data = showDropDownSelected ? false : true;\r\n        setShowDropdownSelected(data)\r\n    }\r\n\r\n    const handleRedirectToProfileSettings = () => {\r\n        navigate(`/updateprofile/${userId}`)\r\n    }\r\n\r\n    const handleRedireactToAbout = () => {\r\n        navigate(`/about`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        <Link to='/' />\r\n        localStorage.clear();\r\n        // let url = `http://13.234.125.76:4000/logout`;\r\n        // fetch((url), {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8',\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topbar\">\r\n                <div className={comparedPageVisited === true ? \"page_title_compared\" : \"page_title\"}>\r\n                    {textToShow}\r\n                    {textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                        <div style={{ display: 'flex', paddingTop: '1rem' }}>\r\n                            <div style={{ paddingLeft: '1.25rem' }}>\r\n                                <Link to=\"/CompareInfluencers\" className=\"tab_text\">Influencers</Link>\r\n                            </div>\r\n                            <div style={{ paddingLeft: '3.5rem' }}>\r\n                                <Link to=\"/CompareLists\" className=\"tab_text\">List</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span className=\"topbar_help_icon\"><img src={help} /></span>\r\n                    <img src={UserIcon} className=\"topbar_user_icon\" />\r\n                    <span className=\"topbar_username\">{userName}</span>\r\n                    <span style={{ marginRight: '4rem', cursor: 'pointer' }}><MdOutlineArrowDropDown onClick={handleShowProfileDropdown} /></span>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDropDownSelected === true ?\r\n                    <div className=\"dropdown\">\r\n                        <div onClick={handleRedirectToProfileSettings} className=\"dropdown_title\">Profile Settings</div>\r\n                        <div onClick={handleRedireactToAbout} className=\"dropdown_title\">About</div>\r\n                        <div onClick={handleLogout} className=\"dropdown_title\"><Link to='/'>Logout</Link></div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TopBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../../Common/Sidebar/sidebar';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './listpage.scss';\r\nimport { Input, Label } from 'reactstrap';\r\nimport { MdOutlineAddBox } from \"react-icons/md\";\r\nimport { AiOutlineSearch, AiOutlineClose } from 'react-icons/ai';\r\nimport { RiSubtractFill, RiAddFill } from 'react-icons/ri';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { BsFilterLeft } from 'react-icons/bs';\r\nimport TopBar from '../../Common/TopBar';\r\nimport Sport from '../../Assets/Images/sport.jpg'\r\nimport Slider from '@mui/material/Slider';\r\nimport Select from 'react-select';\r\nimport Loader from '../../Common/Loader/index'\r\nconst options = [\r\n    { value: 'Nano(1K-10K Followers)', label: 'Nano(1K-10K Followers)' },\r\n    { value: 'Micro(10K-50K Followers)', label: 'Micro(10K-50K Followers)' },\r\n    { value: 'Mid-Tier(50K-100K Followers)', label: 'Mid-Tier(50K-100K Followers)' },\r\n    { value: 'Macro(100K-1M Followers)', label: 'Macro(100K-1M Followers)' },\r\n    { value: 'Mega(1M + Followers)', label: 'Mega(1M + Followers)' },\r\n];\r\nconst options1 = [\r\n    { value: 'Nano(1K-10K Followers)', label: 'Nano(1K-10K Followers)' },\r\n    { value: 'Micro(10K-50K Followers)', label: 'Micro(10K-50K Followers)' },\r\n    { value: 'Mid-Tier(50K-100K Followers)', label: 'Mid-Tier(50K-100K Followers)' },\r\n    { value: 'Macro(100K-1M Followers)', label: 'Macro(100K-1M Followers)' },\r\n    { value: 'Mega(1M + Followers)', label: 'Mega(1M + Followers)' },\r\n];\r\n\r\n\r\nfunction Lists() {\r\n\r\n    const [inputField, setInputField] = useState('');\r\n    const [basketData, setBasketData] = useState([]);\r\n    const [listInfluencersData, setListInfluencersData] = useState([]);\r\n    const [listInfluencerDetails, setListInfluencerDetails] = useState([]);\r\n    const [newPlanClicked, setNewPlanClicked] = useState(false);\r\n    const [listName, setListName] = useState('');\r\n    const [listData, setListData] = useState([]);\r\n    const [reel, setReel] = useState(0);\r\n    const [post, setPost] = useState(0);\r\n    const [story, setStory] = useState(0);\r\n    const [igtv, setIgtv] = useState(0);\r\n    const [swipeUpStory, setswipeUpStory] = useState(0);\r\n    const [video, setVideo] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [listDeleted, setListDeleted] = useState(false);\r\n    const [basketName, setBasketName] = useState([]);\r\n    const [sortingBaskets, setSortingBaskets] = useState(false);\r\n    const [sortedBaskets, setSortedBaskets] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [suggestionIndex, setSuggestionIndex] = useState(0);\r\n    const [suggestionsActive, setSuggestionsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n\r\n    const [nanoClicked, setNanoClicked] = useState(false);\r\n    const [microClicked, setMicroClicked] = useState(false);\r\n    const [midTierClicked, setMidTierClicked] = useState(false);\r\n    const [macroClicked, setMacroClicked] = useState(false);\r\n    const [megaClicked, setMegaClicked] = useState(false);\r\n    const [nanoMaxClicked, setNanoMaxClicked] = useState(false);\r\n    const [microMaxClicked, setMicroMaxClicked] = useState(false);\r\n    const [midTierMaxClicked, setMidTierMaxClicked] = useState(false);\r\n    const [macroMaxClicked, setMacroMaxClicked] = useState(false);\r\n    const [megaMaxClicked, setMegaMaxClicked] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [selectedOption1, setSelectedOption1] = useState(null);\r\n    const [minRangeFollowers, setMinRangeFollowers] = useState(1000)\r\n    const [maxRangeFollowers, setMaxRangeFollowers] = useState(10000)\r\n    const [rangeEr, setRangeEr] = useState([0, 20]);\r\n    const [silderRolled, setSliderRolled] = useState(false);\r\n    const [silderErRolled, setSliderErRolled] = useState(false);\r\n    const [sliderRolled1, setSlider1Rolled] = useState(false);\r\n    const [isfilterFollowerClicked, setIsFilterFollowerClicked] = useState(false);\r\n    const [isfilterErClicked, setIsFilterErClicked] = useState(false);\r\n    const [filterErApplied, setFilterErApplied] = useState(false);\r\n    const [filterFollowersApplied, setFilterFollowersApplied] = useState(false);\r\n\r\n    let navigate = useNavigate();\r\n    const userId = localStorage.getItem('id');\r\n    const autoSuggestedArray = [];\r\n\r\n\r\n    const searchInfluencers = () => {\r\n        if (filterErApplied) {\r\n            navigate(`/influencerslist/${value}/eRange=${rangeEr[0]}&${rangeEr[1]}`);\r\n        }\r\n        if (filterFollowersApplied) {\r\n            navigate(`/influencerslist/${value}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`);\r\n        }\r\n        if (filterErApplied && filterFollowersApplied) {\r\n            navigate(`/influencerslist/${value}/eRange=${rangeEr[0]}&${rangeEr[1]}/followerRange=${scale1(minRangeFollowers)}&${scale(maxRangeFollowers)}`);\r\n        }\r\n        if (!filterErApplied && !filterFollowersApplied) {\r\n            navigate(`/influencerslist/${value}`);\r\n        }\r\n    }\r\n\r\n    const fetchBasketsName = () => {\r\n        const url = `http://13.234.125.76:4000/showCategorizedBasket`;\r\n        fetch(url)\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                setBasketData(response)\r\n            })\r\n    }\r\n\r\n    const handleRedirectToBasket = (item) => {\r\n        navigate(`/basketInfluencers/${item.categoryName}`)\r\n    }\r\n\r\n    const handleCreateList = (listName, description, reel, post, story, igtv, swipeUpStory, video) => {\r\n        const url = `http://13.234.125.76:4000/createList/${userId}`\r\n        fetch((url), {\r\n            method: 'POST',\r\n            body: JSON.stringify({ listName, description, reel, post, story, igtv, swipeUpStory, video }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((res) => { res.json() })\r\n            .then((data) => {\r\n                setListInfluencerDetails(data)\r\n                setNewPlanClicked(false);\r\n                localStorage.setItem('newList', listName);\r\n            })\r\n    }\r\n\r\n    const handleAddPlan = () => {\r\n        const data = newPlanClicked ? false : true;\r\n        setNewPlanClicked(data);\r\n    }\r\n\r\n    const handleRedirectToList = (item) => {\r\n        navigate(`/userLists/${item.listName}`)\r\n    }\r\n\r\n    const handleDeleteList = (item) => {\r\n        const url = `http://13.234.125.76:4000/deleteList/${userId}?listName=${item.listName}`;\r\n        fetch((url), {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setListDeleted(true);\r\n            })\r\n    }\r\n\r\n\r\n    const getListData = () => {\r\n        const url = `http://13.234.125.76:4000/getListData/${userId}`;\r\n        fetch(url)\r\n            .then((data) => {\r\n                data.json()\r\n                    .then((result) => {\r\n                        setListData(result)\r\n                    })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchBasketsName();\r\n        getListData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getListData();\r\n    }, [newPlanClicked]);\r\n\r\n    useEffect(() => {\r\n        getListData();\r\n    }, [listDeleted]);\r\n\r\n    const handleChange = (e) => {\r\n        const query = e.target.value.toLowerCase();\r\n        setValue(query);\r\n        if (query.length > 2) {\r\n            let url = `http://13.234.125.76:4000/filterUsers?username=${query}`\r\n            fetch(url)\r\n                .then((data) => {\r\n                    data.json()\r\n                        .then((res) => {\r\n                            setSuggestions(res)\r\n                        })\r\n                })\r\n            setSuggestionsActive(true);\r\n        } else {\r\n            setSuggestionsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        navigate(`/profile/${e.target.innerText}`);\r\n        setSuggestions([]);\r\n        setValue('');\r\n        setSuggestionsActive(false);\r\n    };\r\n\r\n    const Suggestions = () => {\r\n        return (\r\n            <>\r\n                <div className=\"suggestions row no-gutters\">\r\n                    <div className='col-lg-10 col-md-8 col-sm-6 col-xs-6 col-6'>\r\n                        <div style={{\r\n                            margin: '0.313rem', padding: 0, fontFamily: 'Noto Sans',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: 700,\r\n                            fontSize: '1.125rem',\r\n                            lineHeight: '1rem',\r\n                            color: 'rgba(0, 0, 0, 0.7)'\r\n                        }}>Influencers</div>\r\n                        {suggestions.map((suggestion, index) => {\r\n                            return (\r\n                                <div\r\n                                    className={index === suggestionIndex ? \"active\" : \"\"}\r\n                                    key={index}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <div className='sug_user'>\r\n                                        <img src={`https://socialbox-bckt.s3.ap-south-1.amazonaws.com/Images/${suggestion.username}/${suggestion.username}_profile_image.png`} className='profile_image' />\r\n                                        <div style={{ marginLeft: '0.5rem' }}>{suggestion.username}</div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handleFollowerFilterClicked = () => {\r\n        setIsFilterFollowerClicked(value => !value)\r\n    };\r\n\r\n    const handleErFilterClicked = () => setIsFilterErClicked(value => !value);\r\n\r\n    const scale = value => {\r\n        const previousMarkIndex = Math.floor(value / 25);\r\n        const previousMark = (megaMaxClicked ? megaRange : macroMaxClicked ? macroRange : midTierMaxClicked ? midTierRange : microMaxClicked ? microRange : nanoMaxClicked ? nanoRange : followersRange)[previousMarkIndex];\r\n        const remainder = value % 25;\r\n        if (remainder === 0) {\r\n            return previousMark.scaledValue;\r\n        }\r\n        const nextMark = (megaMaxClicked ? megaRange : macroMaxClicked ? macroRange : midTierMaxClicked ? midTierRange : microMaxClicked ? microRange : nanoMaxClicked ? nanoRange : followersRange)[previousMarkIndex + 1];\r\n        const increment = (nextMark.scaledValue - previousMark.scaledValue) / 25;\r\n        return remainder * increment + previousMark.scaledValue;\r\n    };\r\n\r\n    const scale1 = value => {\r\n        const previousMarkIndex1 = Math.floor(value / 25);\r\n        const previousMark1 = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : followersRange)[previousMarkIndex1];\r\n        const remainder = value % 25;\r\n        if (remainder === 0) {\r\n            return previousMark1.scaledValue;\r\n        }\r\n        const nextMark = (megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : followersRange)[previousMarkIndex1 + 1];\r\n        const increment = (nextMark.scaledValue - previousMark1.scaledValue) / 25;\r\n        return remainder * increment + previousMark1.scaledValue;\r\n    };\r\n\r\n    const nanoRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 1000,\r\n            label: \"1k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 2500,\r\n            label: \"2.5k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 5000,\r\n            label: \"5k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 7500,\r\n            label: \"7.5k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 10000,\r\n            label: \"10k\"\r\n        }\r\n    ];\r\n\r\n    const midTierRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 50000,\r\n            label: \"50k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 60000,\r\n            label: \"60k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 75000,\r\n            label: \"75k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 90000,\r\n            label: \"90k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 100000,\r\n            label: \"100k\"\r\n        }\r\n    ];\r\n\r\n    const macroRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 100000,\r\n            label: \"100k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 250000,\r\n            label: \"250k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 500000,\r\n            label: \"500k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 750000,\r\n            label: \"750k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 1000000,\r\n            label: \"1M\"\r\n        }\r\n    ];\r\n\r\n    const megaRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 1000000,\r\n            label: \"1M+\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 2500000,\r\n            label: \"2.5M+\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 5000000,\r\n            label: \"5M+\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 7500000,\r\n            label: \"7.5M+\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 10000000,\r\n            label: \"10M+\"\r\n        }\r\n    ]\r\n\r\n    const microRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 10000,\r\n            label: \"10k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 20000,\r\n            label: \"20k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 30000,\r\n            label: \"30k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 40000,\r\n            label: \"40k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 50000,\r\n            label: \"50k\"\r\n        }\r\n    ];\r\n\r\n    const followersRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 1000,\r\n            label: \"1k\"\r\n        },\r\n        {\r\n            value: 25,\r\n            scaledValue: 5000,\r\n            label: \"5k\"\r\n        },\r\n        {\r\n            value: 50,\r\n            scaledValue: 10000,\r\n            label: \"10k\"\r\n        },\r\n        {\r\n            value: 75,\r\n            scaledValue: 25000,\r\n            label: \"25k\"\r\n        },\r\n        {\r\n            value: 100,\r\n            scaledValue: 50000,\r\n            label: \"50k\"\r\n        },\r\n        {\r\n            value: 125,\r\n            scaledValue: 100000,\r\n            label: \"100k\"\r\n        },\r\n        {\r\n            value: 150,\r\n            scaledValue: 250000,\r\n            label: \"250k\"\r\n        },\r\n        {\r\n            value: 175,\r\n            scaledValue: 500000,\r\n            label: \"500k\"\r\n        },\r\n        {\r\n            value: 200,\r\n            scaledValue: 1000000,\r\n            label: \"1M\"\r\n        }\r\n    ];\r\n\r\n    const ErRange = [\r\n        {\r\n            value: 0,\r\n            scaledValue: 0,\r\n            label: \"0\"\r\n        },\r\n        {\r\n            value: 5,\r\n            scaledValue: 5,\r\n            label: \"5\"\r\n        },\r\n        {\r\n            value: 10,\r\n            scaledValue: 10,\r\n            label: \"10\"\r\n        },\r\n        {\r\n            value: 15,\r\n            scaledValue: 15,\r\n            label: \"15\"\r\n        },\r\n        {\r\n            value: 20,\r\n            scaledValue: 20,\r\n            label: \"20\"\r\n        }\r\n    ];\r\n\r\n    function numFormatter(num) {\r\n        if (num > 999 && num < 1000000) {\r\n            return (num / 1000).toFixed(0) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n        } else if (num >= 1000000) {\r\n            return (num / 1000000).toFixed(0) + \"M\"; // convert to M for number from > 1 million\r\n        } else if (num < 900) {\r\n            return num; // if value < 1000, nothing to do\r\n        }\r\n    }\r\n\r\n    const filterByFollowersRange = () => {\r\n        setIsFilterFollowerClicked((value) => !value);\r\n        setFilterFollowersApplied(true)\r\n    }\r\n\r\n    const filterByErRange = () => {\r\n        setIsFilterErClicked((value) => !value);\r\n        setFilterErApplied(true)\r\n    }\r\n\r\n    const filterDataByFollowersRange = () => {\r\n        setIsFilterFollowerClicked(false);\r\n    }\r\n\r\n    const filterDataByErRange = () => {\r\n        setIsFilterErClicked(false);\r\n    }\r\n\r\n    const handleClearFilters = () => {\r\n        setFilterErApplied(false);\r\n        setFilterFollowersApplied(false);\r\n    }\r\n\r\n    const handleChangeBasketValue = (e) => {\r\n        let array = [];\r\n        setBasketName(e.target.value)\r\n        if ((e.target.value).length > 1) {\r\n            setSortingBaskets(true);\r\n            basketData.map((data) => {\r\n                if (data.categoryName.toUpperCase().includes(basketName.toUpperCase())) {\r\n                    array.push(data)\r\n                    setSortedBaskets(array)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            setSortingBaskets(false)\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            searchInfluencers();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedOption !== null) {\r\n            if (selectedOption.label.includes('Mega(1M + Followers)')) {\r\n                setMegaClicked(true);\r\n                setMicroClicked(false);\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Macro(100K-1M Followers)')) {\r\n                setMacroClicked(true);\r\n                setMicroClicked(false);\r\n                setMidTierClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Mid-Tier(50K-100K Followers)')) {\r\n                setMidTierClicked(true)\r\n                setMicroClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Micro(10K-50K Followers)')) {\r\n                setMicroClicked(true)\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setNanoClicked(false);\r\n            }\r\n            else if (selectedOption.label.includes('Nano(1K-10K Followers)')) {\r\n                setNanoClicked(true)\r\n                setMidTierClicked(false);\r\n                setMacroClicked(false);\r\n                setMegaClicked(false);\r\n                setMicroClicked(false);\r\n            }\r\n        }\r\n        console.log(nanoClicked);\r\n    }, [selectedOption])\r\n\r\n    useEffect(() => {\r\n        if (selectedOption1 !== null) {\r\n            if (selectedOption1.label.includes('Mega(1M + Followers)')) {\r\n                setMegaMaxClicked(true);\r\n                setMicroMaxClicked(false);\r\n                setMidTierMaxClicked(false);\r\n                setMacroMaxClicked(false);\r\n                setNanoMaxClicked(false);\r\n            }\r\n            else if (selectedOption1.label.includes('Macro(100K-1M Followers)')) {\r\n                setMacroMaxClicked(true);\r\n                setMicroMaxClicked(false);\r\n                setMidTierMaxClicked(false);\r\n                setMegaMaxClicked(false);\r\n                setNanoMaxClicked(false);\r\n            }\r\n            else if (selectedOption1.label.includes('Mid-Tier(50K-100K Followers)')) {\r\n                setMidTierMaxClicked(true)\r\n                setMicroMaxClicked(false);\r\n                setMacroMaxClicked(false);\r\n                setMegaMaxClicked(false);\r\n                setNanoMaxClicked(false);\r\n            }\r\n            else if (selectedOption1.label.includes('Micro(10K-50K Followers)')) {\r\n                setMicroMaxClicked(true)\r\n                setMidTierMaxClicked(false);\r\n                setMacroMaxClicked(false);\r\n                setMegaMaxClicked(false);\r\n                setNanoMaxClicked(false);\r\n            }\r\n            else if (selectedOption1.label.includes('Nano(1K-10K Followers)')) {\r\n                setNanoMaxClicked(true)\r\n                setMidTierMaxClicked(false);\r\n                setMacroMaxClicked(false);\r\n                setMegaMaxClicked(false);\r\n                setMicroMaxClicked(false);\r\n            }\r\n        }\r\n    }, [selectedOption1])\r\n\r\n    return (\r\n        <>\r\n            <div className='list_container row no-gutters'>\r\n                <div className='col-lg-2 col-md-2 col-sm-2 col-xs-2  col-2'>\r\n                    <Navbar />\r\n                </div>\r\n                <div className='lists_content col-lg-10 col-sm-10 col-md-10 col-xs-10 col-10'>\r\n                    <div className='row no-gutters'>\r\n                        <div className='col-lg-12 col-sm-12 col-md-12 col-xs-12 col-12 '>\r\n                            <TopBar />\r\n                        </div>\r\n                    </div>\r\n                    <div className='row no-gutters'>\r\n                        <div className='middle_pane_lists col-lg-9 col-md-8 col-sm-8 col-xs-8 col-8 '>\r\n                            <div className='list_headers row no-gutters'>\r\n                                <div className='search_container col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12'>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                        placeholder='Search for influencers, categories...'\r\n                                        className='input_search col-lg-10 col-md-8 col-sm-6 col-xs-6 col-6'\r\n                                        onKeyDown={handleKeyDown}\r\n                                    />\r\n                                    {suggestionsActive && <Suggestions />}\r\n                                    <Button className='button_list' onClick={searchInfluencers}><AiOutlineSearch /></Button>\r\n                                </div>\r\n                                <div className='row filterContainer'>\r\n                                    <Button className='test-bg' onClick={filterByFollowersRange}>Followers count<BsFilterLeft /></Button>\r\n                                    <Button className='test-bg' onClick={filterByErRange}>Engagement Rate % <BsFilterLeft /></Button>\r\n                                    {\r\n                                        isfilterErClicked === true ?\r\n                                            <div className=\"modal_section\">\r\n                                                <div className=\"modal_option\">\r\n                                                    <div>Engagement Rate %</div>\r\n                                                    <Slider\r\n                                                        value={rangeEr}\r\n                                                        onChange={(e, data) => {\r\n                                                            setRangeEr(data)\r\n                                                            setSliderErRolled(true);\r\n                                                        }}\r\n                                                        marks={ErRange}\r\n                                                        min={0}\r\n                                                        max={20}\r\n                                                        step={1}\r\n                                                        className='slider'\r\n                                                    />\r\n                                                    {\r\n                                                        silderErRolled === true ?\r\n                                                            <>\r\n                                                                <div className=\"followers_count_1\">Minimum ER: {rangeEr[0]}</div>\r\n                                                                <div className=\"followers_count\">Maximum ER: {rangeEr[1]}</div>\r\n                                                            </>\r\n                                                            :\r\n                                                            <>\r\n                                                                <div className=\"followers_count_1\">Minimum ER: {rangeEr[0]}</div>\r\n                                                                <div className=\"followers_count\">Maximum ER: {rangeEr[1]}</div>\r\n                                                            </>\r\n                                                    }\r\n                                                    <div style={{\r\n                                                        display: 'flex', justifyContent: 'space-between'\r\n                                                    }}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            onClick={filterDataByErRange}\r\n                                                            className='filter_btn'\r\n                                                        >\r\n                                                            Filter\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            onClick={handleErFilterClicked}\r\n                                                            className='clr_btn'\r\n                                                        >\r\n                                                            Clear\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            isfilterFollowerClicked === true ?\r\n                                                <div className=\"modal_section\">\r\n                                                    <div className=\"modal_option  row no-gutters\">\r\n                                                        <div className=\"modal_title\">Followers Count</div>\r\n                                                        <div>\r\n                                                            <div className=\"label_slider\">Minimum</div>\r\n                                                            <div style={{ display: 'flex', justifyContent: \"flex-end\" }}>\r\n                                                                <Select\r\n                                                                    defaultValue={selectedOption}\r\n                                                                    onChange={setSelectedOption}\r\n                                                                    options={options}\r\n                                                                    className='select_option'\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Slider\r\n                                                            value={minRangeFollowers}\r\n                                                            onChange={(e, data) => {\r\n                                                                setMinRangeFollowers(data)\r\n                                                                setSliderRolled(true);\r\n                                                            }}\r\n                                                            marks={megaClicked ? megaRange : macroClicked ? macroRange : midTierClicked ? midTierRange : microClicked ? microRange : nanoClicked ? nanoRange : followersRange}\r\n                                                            min={0}\r\n                                                            max={100}\r\n                                                            step={1}\r\n                                                            scale={scale1}\r\n                                                            valueLabelFormat={numFormatter}\r\n                                                            className='slider'\r\n                                                        />\r\n                                                        <div style={{ paddingTop: '2.25rem' }}>\r\n                                                            <div className=\"label_slider\">Maximum</div>\r\n                                                            <div style={{ display: 'flex', justifyContent: \"flex-end\" }}>\r\n                                                                <Select\r\n                                                                    defaultValue={selectedOption1}\r\n                                                                    onChange={setSelectedOption1}\r\n                                                                    options={options1}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Slider\r\n                                                            value={maxRangeFollowers}\r\n                                                            onChange={(e, data) => {\r\n                                                                setMaxRangeFollowers(data)\r\n                                                                setSlider1Rolled(true);\r\n                                                            }}\r\n                                                            marks={megaMaxClicked ? megaRange : macroMaxClicked ? macroRange : midTierMaxClicked ? midTierRange : microMaxClicked ? microRange : nanoMaxClicked ? nanoRange : followersRange}\r\n                                                            min={0}\r\n                                                            max={100}\r\n                                                            step={1}\r\n                                                            scale={scale}\r\n                                                            valueLabelFormat={numFormatter}\r\n                                                            className='slider'\r\n                                                        />\r\n                                                        {\r\n                                                            silderRolled === true ?\r\n                                                                <div className=\"followers_count_1\">Minimum Followers Count: {scale1(minRangeFollowers)}</div>\r\n                                                                :\r\n                                                                <div className=\"followers_count_1\">Minimum Followers Count: {minRangeFollowers}</div>\r\n                                                        }\r\n                                                        {\r\n                                                            sliderRolled1 === true ?\r\n                                                                <div className=\"followers_count\">Maximum Followers Count: {scale(maxRangeFollowers)}</div>\r\n                                                                :\r\n                                                                <div className=\"followers_count\">Maximum Followers Count: {maxRangeFollowers}</div>\r\n                                                        }\r\n                                                        <div style={{\r\n                                                            display: 'flex', justifyContent: 'space-between'\r\n                                                        }}>\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                onClick={filterDataByFollowersRange}\r\n                                                                className='filter_btn'\r\n                                                            >\r\n                                                                Filter\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                color=\"primary\"\r\n                                                                onClick={handleFollowerFilterClicked}\r\n                                                                className='clr_btn'\r\n                                                            >\r\n                                                                Clear\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                : null\r\n                                    }\r\n                                    <Button className='test-bg' onClick={handleClearFilters}><AiOutlineClose /><span>Clear all filters</span></Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='middle_pane_content'>\r\n                                <div className='categorised_inf'>\r\n                                    <div className='basket_top row'>\r\n                                        <div className='categorised_heading col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12'>Top Trending Influencers Baskets</div>\r\n                                        <div className='col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12 pr-4'>\r\n                                            <Input className='basket_search' placeholder='Search bundles, categories...' onChange={handleChangeBasketValue} value={basketName} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='categorised_btn'>\r\n                                        {basketData.map((item) =>\r\n                                            <Button className='button_list' onClick={() => { handleRedirectToBasket(item) }}>{item.categoryName}</Button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className='influencers_basket row'>\r\n                                    {\r\n                                        basketData[0] ?\r\n                                            sortingBaskets === true ?\r\n                                                sortedBaskets.map((item) =>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12\">\r\n                                                        <div className='influencers_basket_box row'>\r\n                                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-5 pl-0 pr-0'>\r\n                                                                <div className='influencers_image' >\r\n                                                                    <img src={`https://socialbox-bckt.s3.ap-south-1.amazonaws.com/Basket/${item.categoryName}/image.png`} className=\"influencers_image\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='basket_right_pane col-lg-7 col-md-7 col-sm-7 col-xs-7 col-7'>\r\n                                                                <div className='influencers_category_header'>\r\n                                                                    Top {item.basketInfluencersCount} {item.categoryName} Influencers Bundle\r\n                                                                </div>\r\n                                                                <div className='basket_p'>\r\n                                                                    {item.description ? item.description : 'Boost your marketing campaigns with ...'}\r\n                                                                </div>\r\n                                                                <div className='influencers_footer_btn'>\r\n                                                                    <Button onClick={() => handleRedirectToBasket(item)}><span style={{ margin: 0 }}>View</span></Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                                :\r\n                                                basketData.map((item) =>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12\">\r\n                                                        <div className='influencers_basket_box row'>\r\n                                                            <div className='col-lg-5 col-md-5 col-sm-5 col-xs-5 col-5 pl-0 pr-0'>\r\n                                                                <div className='influencers_image' >\r\n                                                                    <img src={`https://socialbox-bckt.s3.ap-south-1.amazonaws.com/Basket/${item.categoryName}/image.png`} className=\"influencers_image\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='basket_right_pane col-lg-7 col-md-7 col-sm-7 col-xs-7 col-7'>\r\n                                                                <div className='influencers_category_header'>\r\n                                                                    Top {item.basketInfluencersCount} {item.categoryName} Influencers Bundle\r\n                                                                </div>\r\n                                                                <div className='basket_p'>\r\n                                                                    {item.description ? item.description : 'Boost your marketing campaigns with ...'}\r\n                                                                </div>\r\n                                                                <div className='influencers_footer_btn'>\r\n                                                                    <Button onClick={() => handleRedirectToBasket(item)}><span style={{ margin: 0 }}>View</span></Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            :\r\n                                            <div className='inline_loader'>\r\n                                                <Loader />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"list_bar col-lg-3 col-md-4 col-sm-4 col-xs-4 col-4 \">\r\n                            <>\r\n                                <div className=\"headers_title\">\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }} className='row'>\r\n                                        <div className=\"headers col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12\">\r\n                                            My Lists\r\n                                        </div>\r\n                                        <div className='add_list_btn col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12' onClick={handleAddPlan}> + Add new</div>\r\n                                    </div>\r\n                                    {\r\n                                        newPlanClicked ?\r\n                                            <div className='overlay'>\r\n                                                <div className='addList_section'>\r\n                                                    <Label>Create New List</Label>\r\n                                                    <Input type=\"text\" placeholder=\"List Name\" value={listName} onChange={(e) => { setListName(e.target.value) }} className=\"input_listname\" />\r\n                                                    <Input type='text' placeholder='Description' value={description} onChange={(e) => { setDescription(e.target.value) }} className=\"input_description\" />\r\n                                                    <Label style={{ marginTop: '0.75rem' }}>Deliverables</Label>\r\n                                                    <div>\r\n                                                        <div className='deliverables_pane_align'>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Reels</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        reel === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setReel(reel - 1) }}>-</div>\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{reel}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setReel(reel + 1) }}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Static Posts</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        post === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setPost(post - 1) }}>-</div>\r\n\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{post}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setPost(post + 1) }}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='deliverables_pane_align'>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Videos</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        video === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => setVideo(video - 1)}>-</div>\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{video}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => setVideo(video + 1)}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Stories</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        story === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setStory(story - 1) }}>-</div>\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{story}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setStory(story + 1) }}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='deliverables_pane_align'>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Swipeup Story</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        swipeUpStory === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => setswipeUpStory(swipeUpStory - 1)}>-</div>\r\n\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{swipeUpStory}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => setswipeUpStory(swipeUpStory + 1)}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='deliverables_box'>\r\n                                                                <div style={{ width: '2.25rem' }}>Igtv</div>\r\n                                                                <div className='deliverables_value'>\r\n                                                                    {\r\n                                                                        igtv === 0 ?\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }}>-</div>\r\n                                                                            :\r\n                                                                            <div style={{ borderRight: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setIgtv(igtv - 1) }}>-</div>\r\n                                                                    }\r\n                                                                    <div style={{ width: '5rem', textAlign: 'center' }}>{igtv}</div>\r\n                                                                    <div style={{ borderLeft: '0.063rem solid RGB(0, 0, 0, 0.5)', width: '2.625rem', textAlign: 'center' }} onClick={() => { setIgtv(igtv + 1) }}>+</div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                                        <Button className='add_list_btn' variant=\"outlined\" onClick={() => { handleCreateList(listName, description, reel, post, story, igtv, swipeUpStory, video) }}>Add</Button>\r\n                                                        <Button className='cancel_btn' onClick={handleAddPlan}>Cancel</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> :\r\n                                            null\r\n                                    }\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                <div className=\"list_content\">\r\n                                    {\r\n                                        listData[0] ?\r\n                                            listData.map((item) =>\r\n                                                <div className=\"list_content_inner\">\r\n                                                    <div className=\"list_head\">\r\n                                                        <span className='list_name'>{item.listName}</span>\r\n                                                        {item.influencersCount}\r\n                                                        <MdDelete onClick={() => { handleDeleteList(item) }} />\r\n                                                    </div>\r\n                                                    <div className='list_desc'>\r\n                                                        {item.description}\r\n                                                    </div>\r\n                                                    <div className='list_footer row no-gutters'>\r\n                                                        <div className='list_view col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12'>\r\n                                                            <Button onClick={() => { handleRedirectToList(item) }} className='view_btn'>View</Button>\r\n                                                        </div>\r\n                                                        <div className='inf_count col-lg-6 col-md-6 col-sm-12 col-xs-12 col-12'>\r\n                                                            {item.influencersData.length} Influencers\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            :\r\n                                            <div className='inline_loader'>\r\n                                                <Loader />\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Lists;"],"names":["class","userId","localStorage","getItem","SidebarData","title","path","icon","cName","useState","sidebar","setSidebar","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","isMobile","value","color","className","src","logo","map","item","index","to","showDropDownSelected","setShowDropdownSelected","comparedPageVisited","setComparedPageVisited","userName","navigate","useNavigate","location","useLocation","params","useParams","textToShow","page","text","find","el","pathname","includes","style","display","paddingTop","paddingLeft","alignItems","marginRight","cursor","onClick","clear","options","label","options1","basketData","setBasketData","setListInfluencerDetails","newPlanClicked","setNewPlanClicked","listName","setListName","listData","setListData","reel","setReel","post","setPost","story","setStory","igtv","setIgtv","swipeUpStory","setswipeUpStory","video","setVideo","description","setDescription","listDeleted","setListDeleted","basketName","setBasketName","sortingBaskets","setSortingBaskets","sortedBaskets","setSortedBaskets","suggestions","setSuggestions","suggestionIndex","suggestionsActive","setSuggestionsActive","setValue","nanoClicked","setNanoClicked","microClicked","setMicroClicked","midTierClicked","setMidTierClicked","macroClicked","setMacroClicked","megaClicked","setMegaClicked","nanoMaxClicked","setNanoMaxClicked","microMaxClicked","setMicroMaxClicked","midTierMaxClicked","setMidTierMaxClicked","macroMaxClicked","setMacroMaxClicked","megaMaxClicked","setMegaMaxClicked","selectedOption","setSelectedOption","selectedOption1","setSelectedOption1","minRangeFollowers","setMinRangeFollowers","maxRangeFollowers","setMaxRangeFollowers","rangeEr","setRangeEr","silderRolled","setSliderRolled","setSliderErRolled","sliderRolled1","setSlider1Rolled","isfilterFollowerClicked","setIsFilterFollowerClicked","isfilterErClicked","setIsFilterErClicked","filterErApplied","setFilterErApplied","filterFollowersApplied","setFilterFollowersApplied","searchInfluencers","scale1","scale","handleRedirectToBasket","categoryName","handleAddPlan","getListData","url","fetch","then","data","json","result","res","response","handleClick","e","target","innerText","Suggestions","margin","padding","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","suggestion","username","marginLeft","previousMarkIndex","Math","floor","previousMark","megaRange","macroRange","midTierRange","microRange","nanoRange","followersRange","remainder","scaledValue","previousMarkIndex1","previousMark1","numFormatter","num","toFixed","console","log","TopBar","type","onChange","query","toLowerCase","length","placeholder","onKeyDown","key","Button","Slider","marks","min","max","step","justifyContent","defaultValue","valueLabelFormat","array","toUpperCase","push","basketInfluencersCount","Loader","marginTop","borderRight","textAlign","borderLeft","variant","method","body","JSON","stringify","headers","setItem","handleCreateList","influencersCount","handleDeleteList","handleRedirectToList","influencersData"],"sourceRoot":""}