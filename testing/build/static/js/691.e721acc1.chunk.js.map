{"version":3,"file":"static/js/691.e721acc1.chunk.js","mappings":"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","sources":["Common/NumberFormatter/numFormatter.js","Common/Sidebar/sidebardata.js","Common/Sidebar/sidebar.js","Common/TopBar/index.js","Components/Compare/CompareInfluencers/compareinfluencers.js"],"sourcesContent":["function NFormatter(num) {\r\n    if (num >= 1000000000) {\r\n        return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\r\n    }\r\n    if (num >= 1000000) {\r\n        return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\r\n    }\r\n    if (num >= 1000) {\r\n        return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\r\n    }\r\n    return num;\r\n}\r\n\r\nexport default NFormatter;","import React, { useEffect } from \"react\";\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as MdIcons from 'react-icons/md';\r\nconst userId = localStorage.getItem('id');\r\nexport const SidebarData = [\r\n\r\n    {\r\n        title: 'Home',\r\n        path: `/home/${userId}`,\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Compare',\r\n        icon: <MdIcons.MdCompare />,\r\n        path: \"/CompareInfluencers\",\r\n        cName: 'nav-text',\r\n        // children: [\r\n        //     {\r\n        //         title: \"Influencers\",\r\n        //         cName: 'nav-nested',\r\n        //     },\r\n        //     {\r\n        //         title: \"Lists\",\r\n        //         path: \"/CompareLists\",\r\n        //         cName: 'nav-nested',\r\n        //     }\r\n        // ]\r\n    },\r\n    {\r\n        title: 'Calculator',\r\n        path: '/calculate',\r\n        icon: <AiIcons.AiFillCalculator />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState } from \"react\";\r\nimport './sidebar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from \"./sidebardata\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { AiFillCaretDown } from 'react-icons/ai';\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport logo from '../../Assets/Images/logo.png';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n    // const [expandCompare, setExpandCompare] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    // const showExpandedMenu = (item) => {\r\n    //     if (item.title === 'Compare') {\r\n    //         setExpandCompare(!expandCompare);\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <IconContext.Provider value={{ color: '#fff' }}>\r\n            <div className={sidebar ? 'nav-menu' : 'nav-menu-active'}>\r\n                <nav className=\"navbar\">\r\n                    {/* <div className={sidebar ? 'navbar-inactive' : 'navbar'} >\r\n                        <Link to='#' className='menu-bars'>\r\n                            <FaIcons.FaBars onClick={showSidebar} />\r\n                        </Link>\r\n                    </div> */}\r\n                    <img src={logo} className='logo' />\r\n                    <ul className=\"nav-menu-items\">\r\n                        {\r\n                            SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <li className={item.cName}>\r\n                                        {\r\n                                            sidebar === true ?\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                </Link>\r\n                                                :\r\n                                                <Link to={item.path}>\r\n                                                    {item.icon}\r\n                                                    <span\r\n                                                    // onClick={() => showExpandedMenu(item)}\r\n                                                    >{item.title}</span>\r\n                                                    {/* {item.title === 'Compare' ? \r\n                                                    <span onClick={() => showExpandedMenu(item)} className='sideicon'>{expandCompare === true ? <AiFillCaretDown /> : <AiFillCaretRight />}</span> : null} */}\r\n                                                    {/* {\r\n                                                    // expandCompare === true ?\r\n                                                    //     item.title === 'Compare' ?\r\n                                                            [item].map((data) =>\r\n                                                                data.children.map((result) =>\r\n                                                                    <Link to={result.path} className='nav-nested' >\r\n                                                                        <span \r\n                                                                        // onClick={() => showExpandedMenu(item)}\r\n                                                                        >{result.title}</span>\r\n                                                                    </Link>\r\n                                                                )\r\n\r\n                                                            ) \r\n                                                            // :\r\n                                                            // null : null\r\n                                                            } */}\r\n                                                </Link>\r\n                                        }\r\n\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div >\r\n        </IconContext.Provider >\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport './index.scss';\r\nimport help from '../../Assets/Images/help.png';\r\nimport { MdOutlineArrowDropDown } from 'react-icons/md';\r\nimport { useNavigate, Link, useLocation, useParams } from 'react-router-dom';\r\nimport UserIcon from '../../Assets/Images/userIcon.png';\r\n\r\nfunction TopBar() {\r\n\r\n    const [showDropDownSelected, setShowDropdownSelected] = useState(false);\r\n    const [comparedPageVisited, setComparedPageVisited] = useState(false);\r\n    const userId = localStorage.getItem('id');\r\n    const userName = localStorage.getItem('name');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const params = useParams()\r\n\r\n    let TOPBAR_TEXTS = [{ page: `/home/${userId}`, text: \"Home\" }, { page: \"/CompareLists\", text: \"Compare Lists\" }, { page: \"/CompareInfluencers\", text: \"Compare Influencers\" }, { page: \"/influencerslist/\", text: \"Search Results\" }, { page: \"/basketInfluencers\", text: \"Influencer Bundle\" }, { page: \"/userLists\", text: \"List\" }, { page: \"/profile\", text: \"Influencer Profile\" }, { page: `/updateprofile/${userId}`, text: \"Profile Settings\" }, { page: `/calculate`, text: \"Calculate Cost\" }]\r\n    let textToShow = TOPBAR_TEXTS.find(el => location.pathname.includes(el.page))?.text\r\n\r\n    const checkPage = () => {\r\n        {\r\n            textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                setComparedPageVisited(true)\r\n                :\r\n                setComparedPageVisited(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        checkPage();\r\n    },[params])\r\n\r\n    const handleShowProfileDropdown = () => {\r\n        let data = showDropDownSelected ? false : true;\r\n        setShowDropdownSelected(data)\r\n    }\r\n\r\n    const handleRedirectToProfileSettings = () => {\r\n        navigate(`/updateprofile/${userId}`)\r\n    }\r\n\r\n    const handleRedireactToAbout = () => {\r\n        navigate(`/about`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        <Link to='/' />\r\n        localStorage.clear();\r\n        // let url = `http://13.234.29.72:4000/logout`;\r\n        // fetch((url), {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8',\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topbar\">\r\n                <div className={comparedPageVisited === true ? \"page_title_compared\" : \"page_title\"}>\r\n                    {textToShow}\r\n                    {textToShow === 'Compare Influencers' || textToShow === 'Compare Lists' ?\r\n                        <div style={{ display: 'flex', paddingTop: '1rem' }}>\r\n                            <div style={{ paddingLeft: '1.25rem' }}>\r\n                                <Link to=\"/CompareInfluencers\" className=\"tab_text\">Influencers</Link>\r\n                            </div>\r\n                            <div style={{ paddingLeft: '3.5rem' }}>\r\n                                <Link to=\"/CompareLists\" className=\"tab_text\">List</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <span className=\"topbar_help_icon\"><img src={help} /></span>\r\n                    <img src={UserIcon} className=\"topbar_user_icon\" />\r\n                    <span className=\"topbar_username\">{userName}</span>\r\n                    <span style={{ marginRight: '4rem', cursor: 'pointer' }}><MdOutlineArrowDropDown onClick={handleShowProfileDropdown} /></span>\r\n                </div>\r\n            </div>\r\n            {\r\n                showDropDownSelected === true ?\r\n                    <div className=\"dropdown\">\r\n                        <div onClick={handleRedirectToProfileSettings} className=\"dropdown_title\">Profile Settings</div>\r\n                        <div onClick={handleRedireactToAbout} className=\"dropdown_title\">About</div>\r\n                        <div onClick={handleLogout} className=\"dropdown_title\"><Link to='/'>Logout</Link></div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Navbar from '../../../Common/Sidebar/sidebar'\r\nimport './cpinf.scss';\r\nimport Topbar from '../../../Common/TopBar/index';\r\nimport Testing from '../.././../Assets/Images/testing.png';\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { HiOutlineUser } from 'react-icons/hi';\r\nimport { FcRating } from 'react-icons/fc';\r\nimport NFormatter from '../../../Common/NumberFormatter/numFormatter';\r\nimport LikeIcon from '../../../Assets/Images/likeIcon.png'\r\nimport CommentIcon from '../../../Assets/Images/commentIcon.png'\r\nimport ER from '../../../Assets/Images/er.png'\r\nimport ViewIcon from '../../../Assets/Images/viewIcon.png'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nfunction CompareInfluencers() {\r\n\r\n    const [comparedInfluencersData, setComparedInfluencersData] = useState([]);\r\n    const [paramsChanged, setParamsChanged] = useState(false);\r\n    const [addToListTableClicked, setAddToListTableClicked] = useState(false);\r\n    const [listData, setListData] = useState([]);\r\n    const [resultClickedData, setResultClickedData] = useState('');\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [suggestionIndex, setSuggestionIndex] = useState(0);\r\n    const [suggestionsActive, setSuggestionsActive] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [autoSuggestedData, setAutoSuggestedData] = useState([]);\r\n    const [influencer, setInfluencer] = useState([]);\r\n    const [addToCompareClicked, setAddToCompareClicked] = useState(false);\r\n    const [addToCompareData, setAddToCompareData] = useState([]);\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n    const userId = localStorage.getItem('id');\r\n    let autoSuggestedArray = [];\r\n\r\n    // const handleCompareInfluencers = (influencer1Name, influencer2Name, influencer3Name) => {\r\n    //     setComparedInfluencersData([]);\r\n    //     const url = `http://13.234.29.72:4000/compareInfluencers?influencer1name=${influencer1Name}&influencer2name=${influencer2Name}&influencer3name=${influencer3Name}`;\r\n    //     fetch(url)\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             setComparedInfluencersData(data);\r\n    //         })\r\n    // }\r\n\r\n\r\n    const handleAddToListTable = (e) => {\r\n        setResultClickedData(e.username)\r\n        const toggle = addToListTableClicked ? false : true;\r\n        setAddToListTableClicked(toggle);\r\n    }\r\n\r\n    const getListData = () => {\r\n        const url = `http://13.234.29.72:4000/getListData/${userId}`;\r\n        fetch(url)\r\n            .then((data) => {\r\n                data.json()\r\n                    .then((result) => {\r\n                        setListData(result)\r\n                    })\r\n            })\r\n    }\r\n\r\n    const addInfluencerToList = (element, elm) => {\r\n        const url = `http://13.234.29.72:4000/addInfluencersToList/${userId}?list=${elm.listName}&username=${element.username}`\r\n        fetch((url), {\r\n            method: 'POST',\r\n        })\r\n            .then((data) => { data.json() })\r\n            .then((res) => {\r\n                console.log(res)\r\n            })\r\n        setAddToListTableClicked(false)\r\n    }\r\n\r\n    const redirectToProfile = (item) => {\r\n        navigate(`/profile/${item.username}`)\r\n    }\r\n\r\n    const fetchAllData = () => {\r\n        const url = `http://13.234.29.72:4000/getrelatedinfluencers?inputField`;\r\n        fetch(url)\r\n            .then((data) => {\r\n                data.json()\r\n                    .then((res) => {\r\n                        res.map((item) => {\r\n                            autoSuggestedArray.push(item.username)\r\n                            setAutoSuggestedData(autoSuggestedArray)\r\n                        })\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const query = e.target.value.toLowerCase();\r\n        setValue(query);\r\n        if (query.length > 1) {\r\n            const filterSuggestions = autoSuggestedData.filter(\r\n                (suggestion) =>\r\n                    suggestion.toLowerCase().indexOf(query) > -1\r\n            );\r\n            setSuggestions(filterSuggestions);\r\n            setSuggestionsActive(true);\r\n        } else {\r\n            setSuggestionsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setInfluencer(e.target.innerText)\r\n        setSuggestions([]);\r\n        setValue('');\r\n        setSuggestionsActive(false);\r\n        {\r\n            const abc = addToCompareData.find((item) => item.username === e.target.innerText)\r\n            if (!abc) {\r\n                setAddToCompareData([...addToCompareData, { username: e.target.innerText }])\r\n            }\r\n        }\r\n        console.log(addToCompareData)\r\n    };\r\n\r\n    const Suggestions = () => {\r\n        return (\r\n            <div className=\"suggestions\">\r\n                {suggestions.map((suggestion, index) => {\r\n                    return (\r\n                        <div\r\n                            className={index === suggestionIndex ? \"active_inf\" : \"non_active\"}\r\n                            key={index}\r\n                            onClick={handleClick}\r\n                        >\r\n                            {suggestion}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleRemoveComparedInfluencer = (item) => {\r\n        let newStr = '';\r\n        let updateStr = params.influencers.substring(params.influencers.indexOf('?') + 1);\r\n        if (updateStr.split('=').length - 1 > 2) {\r\n            let abc = updateStr.split('&');\r\n            for (let i in abc) {\r\n                if (!abc[i].includes(item.username)) {\r\n                    newStr += abc[i] + '&';\r\n                }\r\n            }\r\n            let finalstring = newStr.substring(0, newStr.length - 1)\r\n            navigate(`/CompareInfluencers/${finalstring}`)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAddToCompare = () => {\r\n        const toggle = addToCompareClicked ? false : true;\r\n        setAddToCompareClicked(toggle);\r\n    }\r\n\r\n    const handleRemoveInfluencer = (data) => {\r\n        setAddToCompareData((current) => current.filter((item) =>\r\n            item.username !== data.username\r\n        ))\r\n    }\r\n\r\n    const handleCompareInfluencers = () => {\r\n        let result = ''\r\n        addToCompareData.map((item) => {\r\n            result += (`&influencers=${item.username}`)\r\n            {\r\n                JSON.stringify(params) !== '{}' ?\r\n                    navigate(`/CompareInfluencers/${params.influencers}${result}`)\r\n                    :\r\n                    navigate(`/CompareInfluencers/${result.substring(1)}`)\r\n            }\r\n        })\r\n        handleAddToCompare();\r\n        setAddToCompareData([])\r\n    }\r\n\r\n\r\n    const handleCompareInfluencersByParams = () => {\r\n        if (JSON.stringify(params) !== '{}') {\r\n            const url = `http://13.234.29.72:4000/compareInfluencers?${params.influencers}`;\r\n            fetch(url)\r\n                .then((res) => {\r\n                    res.json()\r\n                        .then((data) => {\r\n                            setComparedInfluencersData(data)\r\n                        })\r\n                })\r\n        }\r\n        else {\r\n            setComparedInfluencersData([])\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleCompareInfluencersByParams();\r\n        getListData();\r\n        fetchAllData();\r\n    }, [params])\r\n\r\n    return (\r\n        <div className='compare_influencers_container row no-gutters'>\r\n            <div className='col-lg-2 col-md-2 col-sm-2 col-xs-2  col-3'>\r\n                <Navbar />\r\n            </div>\r\n            <div className='col-lg-10 col-sm-10 col-md-10 col-xs-10 col-9'>\r\n                <Topbar />\r\n                <div className='result_pane'>\r\n                    {\r\n                        comparedInfluencersData.map((item) =>\r\n                            <div className='results'>\r\n                                <div className='profile_container'>\r\n                                    <img src={Testing} className='image' />\r\n                                </div>\r\n                                <div className='profile_name' onClick={() => { redirectToProfile(item) }}>{item.full_name}</div>\r\n                                <div className='profile_username'>@{item.username}</div>\r\n                                <div className='profile_location'>{item.city_name}</div>\r\n                                {\r\n                                    item.category_enum ?\r\n\r\n                                        <div style={{ padding: '0.75rem' }}>\r\n                                            <div className='profile_category'>{item.category_enum}</div>\r\n                                        </div>\r\n                                        : null\r\n                                }\r\n                                <div className='profile_followers'><HiOutlineUser />{NFormatter(item.edge_followed_by.count)}</div>\r\n                                <div className='like_comment_box'>\r\n                                    <div className='profile_like'><img src={LikeIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[0].avg_likes)}</span></div>\r\n                                    <div className='profile_comment'><img src={CommentIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[0].avg_comment)}</span></div>\r\n                                </div>\r\n                                <div className='like_comment_box'>\r\n                                    <div className='profile_like'><img src={ViewIcon} /><span>{NFormatter(item.edge_felix_video_timeline.edges[0].averageReelView)}</span></div>\r\n                                    <div className='profile_comment'><img src={ER} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[0].er)}</span></div>\r\n                                </div>\r\n                                <div className='list_remove_pane'>\r\n                                    <div onClick={() => { handleAddToListTable(item) }}>+Add to my List</div>\r\n                                    {addToListTableClicked === true ?\r\n                                        item.username == resultClickedData ?\r\n                                            [item].map((elm) =>\r\n                                                <section className=\"addList_section\" id={item.id}>\r\n                                                    <div className=\"addList_option\">\r\n                                                        <div style={{ display: 'flex', justifyContent: 'flex-end' }} onClick={handleAddToListTable}><AiOutlineClose /></div>\r\n                                                        <div className=\"section_list_title\">\r\n                                                            Select the list to which you want to add the\r\n                                                            influencer.\r\n                                                        </div>\r\n                                                        <div style={{ overflowY: 'scroll', height: '20vh', padding: '0.75rem' }}>\r\n                                                            {listData.map((element) =>\r\n                                                                <div className=\"list_options\" onClick={() => { addInfluencerToList(elm, element) }}>\r\n                                                                    {element.listName}\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section>\r\n                                            )\r\n\r\n                                            : null\r\n                                        : null}\r\n                                    <div onClick={() => { handleRemoveComparedInfluencer(item) }}>Remove</div>\r\n                                </div>\r\n                                <div className='recent_posts'>\r\n                                    <div className='recent_posts_title'>Recent Posts</div>\r\n                                    <div className='recent_post_box'>\r\n                                        <img src={Testing} />\r\n                                        <div style={{ paddingLeft: '0.5rem' }}>\r\n                                            <div className='profile_like'><img src={LikeIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[1]?.node.edge_liked_by.count)}</span></div>\r\n                                            <div className='profile_comment'><img src={CommentIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[1]?.node.edge_media_to_comment.count)}</span></div>\r\n                                            <div className='profile_like'><img src={ViewIcon} /><span>{NFormatter(item.edge_felix_video_timeline.edges[1]?.node.video_view_count)}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='recent_post_box'>\r\n                                        <img src={Testing} />\r\n                                        <div style={{ paddingLeft: '0.5rem' }}>\r\n                                            <div className='profile_like'><img src={LikeIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[2]?.node.edge_liked_by.count)}</span></div>\r\n                                            <div className='profile_comment'><img src={CommentIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[2]?.node.edge_media_to_comment.count)}</span></div>\r\n                                            <div className='profile_like'><img src={ViewIcon} /><span>{NFormatter(item.edge_felix_video_timeline.edges[2]?.node.video_view_count)}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='recent_post_box'>\r\n                                        <img src={Testing} />\r\n                                        <div style={{ paddingLeft: '0.5rem' }}>\r\n                                            <div className='profile_like'><img src={LikeIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[3]?.node.edge_liked_by.count)}</span></div>\r\n                                            <div className='profile_comment'><img src={CommentIcon} /><span>{NFormatter(item.edge_owner_to_timeline_media.edges[3]?.node.edge_media_to_comment.count)}</span></div>\r\n                                            <div className='profile_like'><img src={ViewIcon} /><span>{NFormatter(item.edge_felix_video_timeline.edges[3]?.node.video_view_count)}</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className='add_influencers'>\r\n                        <div className='add_btn' onClick={() => handleAddToCompare()}>+</div>\r\n                        <div className='add_inf' onClick={() => handleAddToCompare()}>Add Influencer</div>\r\n                        {\r\n                            addToCompareClicked === true ?\r\n\r\n                                // [data].map((item) =>\r\n                                <div className='overlay'>\r\n                                    <div className=\"compare_section\">\r\n                                        <div className=\"close_btn\"><AiOutlineClose onClick={() => handleAddToCompare()} /></div>\r\n                                        <div className=\"compare_headers\">\r\n                                            Add to Compare\r\n                                        </div>\r\n                                        <div className=\"compare_title\">\r\n                                            Select the influencer(s) from results to\r\n                                            add to the selection you want to compare. You may\r\n                                            compare upto four influencers.\r\n                                        </div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={value}\r\n                                            onChange={handleChange}\r\n                                            className=\"compare_input\"\r\n                                        />\r\n                                        {suggestionsActive && <Suggestions />}\r\n                                        <div className=\"influencers_box\">\r\n                                            <div style={{ overflowY: 'scroll', height: '20vh' }}>\r\n                                                {\r\n                                                    addToCompareData.length > 0 ?\r\n                                                        <>\r\n                                                            {\r\n                                                                addToCompareData.map((data) =>\r\n                                                                    <div className=\"added_influencer\">\r\n                                                                        {data.username}<span><AiOutlineClose onClick={() => { handleRemoveInfluencer(data) }} /></span>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            }\r\n                                                        </>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                            <div onClick={() => setAddToCompareData([])} className=\"clear_all\">\r\n                                                Clear all\r\n                                            </div>\r\n                                            <div className=\"btn_pane\">\r\n                                                <Button onClick={handleCompareInfluencers} className='compare_influencers_btn'>\r\n                                                    Compare Now\r\n                                                </Button>\r\n                                                <Button className=\"clear_btn\">\r\n                                                    Compare Later\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                // )\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default CompareInfluencers;"],"names":["num","toFixed","replace","userId","localStorage","getItem","SidebarData","title","path","icon","cName","useState","sidebar","value","color","className","src","logo","map","item","index","to","showDropDownSelected","setShowDropdownSelected","comparedPageVisited","setComparedPageVisited","userName","navigate","useNavigate","location","useLocation","params","useParams","textToShow","page","text","find","el","pathname","includes","useEffect","style","display","paddingTop","paddingLeft","alignItems","marginRight","cursor","onClick","clear","comparedInfluencersData","setComparedInfluencersData","addToListTableClicked","setAddToListTableClicked","listData","setListData","resultClickedData","setResultClickedData","suggestions","setSuggestions","suggestionIndex","suggestionsActive","setSuggestionsActive","setValue","autoSuggestedData","setAutoSuggestedData","setInfluencer","addToCompareClicked","setAddToCompareClicked","addToCompareData","setAddToCompareData","autoSuggestedArray","handleAddToListTable","e","username","handleClick","target","innerText","console","log","Suggestions","suggestion","handleAddToCompare","JSON","stringify","url","influencers","fetch","then","res","json","data","handleCompareInfluencersByParams","result","getListData","push","catch","err","Testing","redirectToProfile","full_name","city_name","category_enum","padding","NFormatter","edge_followed_by","count","LikeIcon","edge_owner_to_timeline_media","edges","avg_likes","CommentIcon","avg_comment","ViewIcon","edge_felix_video_timeline","averageReelView","ER","er","elm","id","justifyContent","overflowY","height","element","listName","method","addInfluencerToList","newStr","updateStr","substring","indexOf","split","length","abc","i","finalstring","handleRemoveComparedInfluencer","node","edge_liked_by","edge_media_to_comment","video_view_count","type","onChange","query","toLowerCase","filterSuggestions","filter","current","handleRemoveInfluencer","Button"],"sourceRoot":""}